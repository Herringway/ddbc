name: Windows Builds

# Overall ddbc should work on the last 10 minor compiler releases (same as Vibe.d) but for
# simplicity and speed of the CI most builds should be covered by Linux with the
# Windows and MacOS pipelines just testing with the last few compiler versions.

on: [push, pull_request]

jobs:
  test:
    name: ${{ matrix.compiler }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - dmd-latest
          - ldc-latest
          - dmd-2.094.2
          - ldc-1.24.0 # eq to dmd v2.094.1
    steps:
      - uses: actions/checkout@v2

      - name: Install D ${{ matrix.compiler }}
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Upgrade dub dependencies
        if: startsWith(matrix.os, 'windows')
        uses: WebFreak001/dub-upgrade@v0.1

      # Windows x86 builds
      - name: dub test with SQLite config (x86)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: dub test --config=SQLite --arch=x86
        
      - name: dub run with test config (x86)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: dub run --config=test --arch=x86
        
      - name: run the ddbctest project (x86)
        if: ${{ startsWith(matrix.os, 'windows') }}
        working-directory: example
        run: dub build --config=SQLite --arch=x86 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # Windows x86_64 builds
      - name: dub test with SQLite config (x86_64)
        run: dub test --config=SQLite --arch=x86_64
        
      - name: dub run with test config (x86_64)
        run: dub run --config=test --arch=x86_64
        
      - name: run the ddbctest project (x86_64)
        working-directory: example
        run: dub build --config=SQLite --arch=x86_64 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # Windows x86_mscoff (dmd only)
      - name: dub test with SQLite config (x86_mscoff)
        if: ${{ startsWith(matrix.os, 'windows') && startsWith(matrix.compiler, 'dmd') }}
        run: dub test --config=SQLite --arch=x86_mscoff
        
      - name: dub run with test config (x86_mscoff)
        if: ${{ startsWith(matrix.os, 'windows') && startsWith(matrix.compiler, 'dmd') }}
        run: dub run --config=test --arch=x86_mscoff
        
      - name: run the ddbctest project (x86_mscoff)
        if: ${{ startsWith(matrix.os, 'windows') && startsWith(matrix.compiler, 'dmd') }}
        working-directory: example
        run: dub build --config=SQLite --arch=x86_mscoff && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # cache
      - uses: WebFreak001/dub-upgrade@v0.1
        with: { store: true }
